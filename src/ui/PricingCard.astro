---
const { icon = '', title = '', price = '', description = '', features = [], cta = { label: '', href: '' }, highlighted = false, class: className = '' } = Astro.props;
---
<div class={["group relative flex flex-col p-8 rounded-2xl shadow-lg border transition-all duration-300 backdrop-blur-lg bg-white/80 border-surface/10 hover:shadow-2xl hover:-translate-y-1", highlighted ? "ring-2 ring-accent border-accent/60" : "", className].join(' ')}>
  <div class="flex flex-col items-center mb-4">
    <div class="w-14 h-14 flex items-center justify-center rounded-full bg-gradient-to-br from-primary via-accent to-primary/80 text-white text-3xl shadow mb-3">{icon}</div>
    <h3 class="text-2xl font-bold text-heading-light mb-1">{title}</h3>
    <div class="text-3xl font-extrabold text-accent mb-2">{price}</div>
    <div class="text-body-light text-base mb-4 text-center">{description}</div>
  </div>
  <ul class="mb-6 space-y-2">
    {(features as string[]).map((feature: string) => (
      <li class="flex items-center gap-2 text-body-light">
        <span class="text-accent">✔️</span>
        <span>{feature}</span>
      </li>
    ))}
  </ul>
  <a href={cta.href} class={["hover:text-text-heading-dark mt-auto inline-block w-full px-5 py-3 rounded-lg font-semibold text-center shadow-md transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2", highlighted ? "text-text-heading-dark bg-accent hover:bg-primary" : "bg-primary text-on-primary hover:bg-accent hover:text-on-primary"].join(' ')}>{cta.label}</a>
  {highlighted && (
    <span class="absolute text-text-heading-dark top-4 right-4 bg-accent text-on-primary text-xs font-bold px-3 py-1 rounded-full shadow">Best Value</span>
  )}
</div> 